# Use base Node version
FROM node:18-alpine

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Version detection and setup for ALL Next.js versions
RUN NEXT_VERSION=$(node -p "require('./package.json').dependencies.next || require('./package.json').devDependencies.next") && \
    NEXT_MAJOR=$(echo $NEXT_VERSION | sed "s/[^0-9]*\([0-9]*\).*/\1/") && \
    echo "🔍 Detected Next.js version: $NEXT_VERSION (Major: $NEXT_MAJOR)" && \
    case $NEXT_MAJOR in \
        9) \
            echo "⚙️ Setting up for Next.js 9" && \
            apk add --no-cache python2 make g++ && \
            export NODE_OPTIONS="--openssl-legacy-provider";; \
        10) \
            echo "⚙️ Setting up for Next.js 10" && \
            export NODE_OPTIONS="--openssl-legacy-provider";; \
        11) \
            echo "⚙️ Setting up for Next.js 11" && \
            export NODE_OPTIONS="--openssl-legacy-provider";; \
        12) \
            echo "⚙️ Setting up for Next.js 12" && \
            export NODE_OPTIONS="--openssl-legacy-provider";; \
        13) \
            echo "⚙️ Setting up for Next.js 13";; \
        14) \
            echo "⚙️ Setting up for Next.js 14";; \
        15) \
            echo "⚙️ Setting up for Next.js 15";; \
        *) \
            echo "⚙️ Setting up for Next.js $NEXT_MAJOR";; \
    esac && \
    if [ "$NEXT_MAJOR" -le 12 ]; then \
        echo "📦 Installing dependencies for legacy version..." && \
        npm install --legacy-peer-deps --force; \
    else \
        echo "📦 Installing dependencies..." && \
        npm install --force; \
    fi

# Copy rest of the application
COPY . .

# Build with version-specific settings
RUN NEXT_VERSION=$(node -p "require('./package.json').dependencies.next || require('./package.json').devDependencies.next") && \
    NEXT_MAJOR=$(echo $NEXT_VERSION | sed "s/[^0-9]*\([0-9]*\).*/\1/") && \
    if [ "$NEXT_MAJOR" -le 12 ]; then \
        export NODE_OPTIONS="--openssl-legacy-provider"; \
    fi && \
    echo "🏗️ Building Next.js $NEXT_VERSION" && \
    npm run build

# Set environment variables
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Set legacy SSL for older versions at runtime
RUN NEXT_VERSION=$(node -p "require('./package.json').dependencies.next || require('./package.json').devDependencies.next") && \
    NEXT_MAJOR=$(echo $NEXT_VERSION | sed "s/[^0-9]*\([0-9]*\).*/\1/") && \
    if [ "$NEXT_MAJOR" -le 12 ]; then \
        echo "export NODE_OPTIONS='--openssl-legacy-provider'" >> /etc/profile.d/next.sh; \
    fi

# Expose port
EXPOSE 3000

# Start command
CMD ["npm", "start"]